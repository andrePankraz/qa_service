# See environment variables in file ".env"
version: '3.8'
services:
  opensearch-node1:
    # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.type=single-node
      # - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      # - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms6g -Xmx6g" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    networks:
      - app-tier # All of the containers will join the same Docker bridge network
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
  #  opensearch-node2:
  #    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
  #    container_name: opensearch-node2
  #    environment:
  #    - cluster.name=opensearch-cluster
  #    - node.name=opensearch-node2
  #    - discovery.seed_hosts=opensearch-node1,opensearch-node2
  #    - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
  #    - bootstrap.memory_lock=true
  #    - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
  #    ulimits:
  #      memlock:
  #        soft: -1
  #        hard: -1
  #      nofile:
  #        soft: 65536
  #        hard: 65536
  #    volumes:
  #    - opensearch-data2:/usr/share/opensearch/data
  #    networks:
  #    - app-tier
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    depends_on:
      - opensearch-node1
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]' # ',"https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - app-tier
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
  python:
    build:
      context: docker/python
      target: ${TARGET:-local} # dev or local
    depends_on:
      - opensearch-node1
    shm_size: '2gb'
    environment:
      - MODELS_FOLDER=/opt/qa_service/models/
      - IMPORTS_FOLDER=/opt/qa_service/imports/
    stdin_open: true # docker run -i
    tty: true # docker run -t
    volumes:
      - .:/opt/qa_service
    networks:
      - app-tier
    ports:
      - 8200:8200
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]

volumes:
  opensearch-data1:
    #  opensearch-data2:

networks:
  default:
    driver_opts:
      com.docker.network.driver.mtu: 1450
  app-tier:
